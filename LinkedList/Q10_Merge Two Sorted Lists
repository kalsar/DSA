Leetcode:21
Approach: 1.-----
step 1: traverse both LL and store elements in an array then sort the array
          step 2:then convert sorted array into linked list
   T.C : O(n)
   S.C:  O(n)

Approach 2.:-------optimal---------
T.C=O(n)
S.C=O(1)

--------------code------------------------
ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode* dummy=new ListNode();
        ListNode* temp=dummy;
        ListNode* p1=list1;
        ListNode* p2=list2;
        while(p1!=NULL and p2!=NULL){
            if(p1->val<p2->val){
                ListNode* Node =new ListNode(p1->val);
                temp->next=Node;
                temp=temp->next;
                p1=p1->next;

            }
            else{
                ListNode* Node =new ListNode(p2->val);
                temp->next=Node;
                temp=temp->next;
                p2=p2->next;
            }

        }
        while(p1!=NULL){
             ListNode* Node =new ListNode(p1->val);
              temp->next=Node;
                temp=temp->next;
                p1=p1->next;
         }
         while(p2!=NULL){
            ListNode* Node =new ListNode(p2->val);
                temp->next=Node;
                temp=temp->next;
                p2=p2->next;

         }
         return dummy->next;

        
    }
