Question : Given Sorted Array and one target and you should return one pair that sum equal to target.
Approach:-1. Brute Force
Time Complexity: O(n^2);

---------Logic----------------------
#include <bits/stdc++.h>
using namespace std;
vector<int>pairSum(vector<int>nums,int target){
    int n=nums.size();
    vector<int>ans;
    for(int i=0; i<n; i++){
        for(int j=i+1; j<n; j++){
            if(nums[i]+nums[j]==target){
                ans.push_back(i);
                ans.push_back(j);
                return ans;
                
            }
         }
    }
    return ans;
    
}
int main() {
    vector<int>nums= {2,7,11,15};
    int target=9;
    vector<int>ans= pairSum(nums,target);
    cout<<" ans is:"<<ans[0]<<" ,"<<ans[1];
    return 0;
}

Approach:-2: Two pointer
Time Complexity: O(n)
--------------Logic-------------
vector<int>pairSum(vector<int>nums,int target){
    int n=nums.size();
    vector<int>ans;
    int i=0;
    int j=n-1;
    while(i<j){
        if(nums[i]+nums[j]==target){
            ans.push_back(i);
            ans.push_back(j);
            return ans;
        }
        else if(nums[i]+nums[j]>target){
            j--;
        }
        else{
            i++;
        }
    }
    return ans;
    
}
