Leetcode:34
Approach 1. Optimal soluction;

.........................Code.............................

vector<int> searchRange(vector<int>& nums, int target) {
        int n=nums.size();
        int start=0;
        int end=n-1;
        vector<int>ans(2,-1);

        while(start<=end){

            int mid=start+((end-start)/2);  

            if(nums[mid]==target){
                int left=mid;
                while(left>0 and nums[left-1]==target){
                    left--;
                }

                int right=mid;
                while(right<n-1 and nums[right+1]==target){
                    right++;
                }

                 ans[0]=left;
                 ans[1]=right;
                 return ans;

             }
            else if(nums[mid]<target){
                start=mid+1;
            }
            else{
                end=mid-1;
            }

        }

       return ans;
        
    }
